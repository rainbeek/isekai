name: CI / Code

on:
  pull_request:
    branches:
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  check-spell:
    name: Check spell
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install reviewdog
        uses: reviewdog/action-setup@3f401fe1d58fe77e10d665ab713057375e39b887 # v1
        with:
          reviewdog_version: latest
      - name: Install Code Spell Checker
        run: npm install -g cspell
      - name: Check Code Spell
        run: cspell '**/*.{dart,swift,kt}' > cspell.log
      - name: Run reviewdog for Code Spell Checker
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat cspell.log | reviewdog -efm='%f:%l:%c - %m' -name='Code Spell Checker' -reporter='github-pr-review'

  lint-flutter:
    name: Lint Flutter
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install reviewdog
        uses: reviewdog/action-setup@3f401fe1d58fe77e10d665ab713057375e39b887 # v1
        with:
          reviewdog_version: latest
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: ./ios
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
          working-directory: ./ios
      - name: Flutter analyze
        run: flutter analyze --fatal-infos > flutter-analyze.log
      - name: Output Flutter analyze results
        if: failure()
        run: cat flutter-analyze.log
      - name: Run reviewdog for Flutter Analyzer
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat flutter-analyze.log | reviewdog -efm='%#%t%.%# • %m • %f:%l:%c %r' -name='Flutter Analyzer' -reporter='github-pr-review'

  test-flutter:
    name: Test Flutter
    permissions:
      checks: write
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: ./ios
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
          working-directory: ./ios
      - name: Run Flutter test
        run: flutter test --file-reporter json:flutter-test-results.log
      - uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: "Test Flutter results"
          path: "flutter-test-results.log"
          reporter: "flutter-json"

  build-ios-dev-app:
    name: Build iOS dev app
    permissions:
      contents: read
      pull-requests: read
    runs-on: macos-14
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Xcode
        uses: ./.github/actions/setup-xcode
      - name: Setup CocoaPods
        uses: ./.github/actions/setup-cocoapods
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: ./ios
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
          dart-defines-json-base64-dev: ${{ secrets.DART_DEFINES_JSON_BASE64_DEV }}
          working-directory: ./ios
      - name: Generate uncommited iOS files
        uses: ./.github/actions/generate-uncommited-ios-files
        with:
          google-service-plist-base64-dev: ${{ secrets.GOOGLE_SERVICE_PLIST_BASE64_DEV }}
      - name: Build iOS dev app
        run: bundle exec fastlane ios build_dev_with_no_code_sign
        working-directory: ./ios
  push-back-diffs-if-needed:
    name: Push back diffs after resolving dependencies if needed
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2
        with:
          app_id: ${{ secrets.RAINBEEK_WORKFLOW_APP_ID }}
          private_key: ${{ secrets.RAINBEEK_WORKFLOW_APP_PRIVATE_KEY_PEM }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.head_ref }}
          # CI がプッシュバック後に再度トリガーされることを保証するため、
          # デフォルトのトークン `GITHUB_TOKEN` の代わりに GitHub App トークンを使用する
          token: ${{ steps.generate-token.outputs.token }}
          fetch-depth: 0
      - name: Setup Git
        uses: ./.github/actions/setup-git
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: ./ios
      - name: Install iOS dependencies
        run: bundle exec fastlane ios install_dependencies
        working-directory: ./ios
      - name: Commit
        run: |
          git add ios/Podfile.lock
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'build: Podfile.lock を修復'
          fi
      - name: Push back if needed
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          git push origin "$BRANCH_NAME"

  build-android-dev-app:
    name: Build Android dev app
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Gradle
        uses: ./.github/actions/setup-gradle
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: ./android
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
          dart-defines-json-base64-dev: ${{ secrets.DART_DEFINES_JSON_BASE64_DEV }}
          working-directory: ./android
      - name: Generate uncommited Android files
        uses: ./.github/actions/generate-uncommited-android-files
        with:
          google-service-json-base64-dev: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64_DEV }}
      - name: Generate key store files
        run: |
          echo "${{ secrets.KEY_PROPERTIES_BASE64 }}" | base64 -d > android/key.properties
          echo "${{ secrets.UPLOAD_KEYSTORE_JKS_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
      - name: Build Android dev app
        run: bundle exec fastlane android build_dev
        working-directory: ./android
